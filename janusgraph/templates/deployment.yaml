apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "janusgraph-cluster.fullname" . }}
  labels:
    {{- include "janusgraph-cluster.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "janusgraph-cluster.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "janusgraph-cluster.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "janusgraph-cluster.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: JANUS_PROPS_TEMPLATE
            value: cassandra-es
          - name: janusgraph.storage.backend
            value: cql
          - name: janusgraph.storage.hostname
            value: "janusgraph-cassandra.{{ .Release.Namespace }}.svc"
          - name: janusgraph.storage.username
            value: "{{ .Values.cassandra.dbUser.user }}"
          - name: janusgraph.storage.password
            value: "{{ .Values.cassandra.dbUser.password }}"
          - name: janusgraph.index.search.backend
            value: "elasticsearch"
          - name: janusgraph.index.search.hostname
            value: "janusgraph-elasticsearch-coordinating-only.{{ .Release.Namespace }}.svc"
          ports:
            - name: websocket
              containerPort: 8182
              protocol: TCP
          #readinessProbe:
          #  exec:
          #    command:
          #      - "/bin/sh -c"
          #      - "bin/gremlin.sh -e"
          #      - "scripts/remote-connect.groovy"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
